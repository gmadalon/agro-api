openapi: 3.0.0
info:
  title: Agro API
  description: Methods of agro API.
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Localhost server
paths:
  /people:
    get:
      operationId: getAllPeople
      summary: Returns a list of all people.
      tags:
        - people-api-controller
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                 $ref: '#/components/schemas/PersonGetDTO'
    post:
      operationId: createPerson
      summary: Insert one person.
      tags:
        - people-api-controller
      requestBody:
        description: Person object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDTO'        
      responses:
        '201':    # status code
          description: Created
  /people/{id}:
    get:
      operationId: getByPersonId
      summary:  Get Person by Id
      tags:
        - people-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/PersonDTO'      
    put:
      operationId: updatePerson
      summary: insert one person.
      tags:
        - people-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      requestBody:
        description: Person object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDTO'        
      responses:
        '201':    # status code
          description: Created
    delete:
      operationId: deletePerson
      summary: delete one person.
      tags:
        - people-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Deleted
  /farms:        
    post:
      operationId: insertFarm
      summary: insert one Farm.
      tags:
        - farms-api-controller
      requestBody:
        description: Person object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmDTO'        
      responses:
        '201':    # status code
          description: Created
  /farms/keyword/{keyword}:
    get:
      operationId: getFarmsByKeyword
      summary: Returns a list of Farms by keyword.
      tags:
        - farms-api-controller
      parameters:
        - name: keyword
          in: path
          description: Keyword
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                 $ref: '#/components/schemas/FarmGetDTO'
          
  /farms/people/{id}:
    get:
      operationId: getFarmsByPersonId
      summary: Returns a list of Farms by person Id.
      tags:
        - farms-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                 $ref: '#/components/schemas/FarmGetDTO'
  /farms/from/{beginDate}/to/{endDate}:
    get:
      operationId: getFarmsPeriod
      summary: Returns a Farm by Id.
      tags:
        - farms-api-controller
      parameters:
        - name: beginDate
          in: path
          description: Begin date
          required: true
          schema:
            type: string
            format: date                
        - name: endDate
          in: path
          description: End date
          required: true
          schema:
            type: string
            format: date                
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                 $ref: '#/components/schemas/FarmGetDTO'
  /farms/{id}:
    get:
      operationId: getFarmById
      summary: Returns a Farm by Id.
      tags:
        - farms-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                 $ref: '#/components/schemas/FarmDTO'          
        
    put:
      operationId: updateFarm
      summary: insert one Farm.
      tags:
        - farms-api-controller
      parameters:
        - name: id
          in: path
          description: Farm ID
          required: true
          schema:
            type: string
      requestBody:
        description: Farm object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmDTO'        
      responses:
        '201':    # status code
          description: Created
    delete:
      operationId: deleteFarm
      summary: delete one Farm.
      tags:
        - farms-api-controller
      parameters:
        - name: id
          in: path
          description: Person ID
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: Deleted
components:
  schemas:
    PersonDTO:
      properties:
        forename:
          type: string
          minLength: 3
          maxLength: 50
        lastname:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          minLength: 3
          maxLength: 50
    PersonGetDTO:
      properties:
        id:
          type: string
        forename:
          type: string
          minLength: 3
          maxLength: 50
        lastname:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          minLength: 3
          maxLength: 50
    FarmDTO:
      properties:
        ownerId:
          type: string
        name:
          type: string
          minLength: 10
          maxLength: 100
        description:
          type: string
          minLength: 10
          maxLength: 1000
        keywords:
          type: array
          items:
            type: string
    FarmGetDTO:
      properties:
        id:
          type: string
        ownerId:
          type: string
        name:
          type: string
          minLength: 10
          maxLength: 100
        keywords:
          type: array
          items:
            type: string